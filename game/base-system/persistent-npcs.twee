:: Widgets Persistent NPCs [widget]
/*For saving generic NPC data so they can be loaded later*/
<<widget "saveNPC">>
/*First argument is the NPClist index of the NPC to be saved. Second argument is the string you want to save it under.*/
<<if $args[0] gte 0 and $args[1]>>
	<<set _temp1 to $args[1]>>
	<<set _temp0 to $args[0]>>
	<<set $per_npc[_temp1] to clone($NPCList[_temp0])>>
	/*Clears name from name pool */
	<<if $NPCList[$args[0]].pronoun is "f">>
		<<set $NPC_names_f.delete($NPCList[$args[0]].name)>>
	<<else>>
		<<set $NPC_names_m.delete($NPCList[$args[0]].name)>>
	<</if>>
<</if>>
<</widget>>

<<widget "loadNPC">>
<!-- Checks if endevent was properly used after the last event -->
<<checkEventNPC $args[0]>>
/*First argument is the NPClist you want the NPC to fill. Second argument is the string you want to load, as saved with saveNPC.*/
<<if $args[0] gte 0 and $args[1]>>
	<<set _temp1 to $args[1]>>
	<<set _temp0 to $args[0]>>
	<<set $NPCList[_temp0] to clone($per_npc[_temp1])>>
	<<if $enemyno lt 6>><<set $enemyno += 1>><</if>>
	<<if $NPCList[_temp0].monster is "monster">>
		<<set $monster to 1>>
	<<else>>
		<<set $monster to 0>>
	<</if>>
	<<pushEventNPC $args[0]>>
	<<set $enemynomax to $enemyno>>
<</if>>
<</widget>>

<<widget "clearNPC">>
/*Clears persistent NPC data for a single NPC. Argument is the string the NPC was saved under.*/
<<if $args[0]>>
	<<set _temp0 to $args[0]>>
	/*Adds name back into name pool */
	<<if $per_npc[_temp0].pronoun is "f">>
		<<set $NPC_names_f.pushUnique($per_npc[_temp0].name)>>
	<<else>>
		<<set $NPC_names_m.pushUnique($per_npc[_temp0].name)>>
	<</if>>
	<<run delete $per_npc[_temp0]>>
<</if>>
<</widget>>

<<widget "updateNPCsFirst">>/*Adds new variables to saved NPCs.*/
<<for _per_keys range Object.keys($per_npc)>>
	<<set $per_npc[_per_keys][$args[0]] to $args[1]>>
<</for>>
<</widget>>

<<widget "updateNPCsSecond">>
<<for _per_keys range Object.keys($per_npc)>>
	<<set $per_npc[_per_keys][$args[0]][$args[1]] to $args[2]>>
<</for>>
<</widget>>